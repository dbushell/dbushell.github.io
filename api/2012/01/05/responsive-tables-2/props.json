{
  "dateUnix": 1325793182000,
  "dateFormatted": "Thursday 5 Jan 2012",
  "pageHeading": "Responsive Tables (2)",
  "pagePath": "/2012/01/05/responsive-tables-2/",
  "innerHTML": "<div class=\"b-boxed b-boxed--dark u-dark\">\n<h3>NEW: <a href=\"/2016/03/04/css-only-responsive-tables/\">CSS only Responsive Tables</a></h3>\n<p>See the link above for more recent developments.</p>\n</div>\n\n<p>My <a href=\"http://dbushell.com/2012/01/04/responsive-calendar-demo/\">last article on responsive tables</a> was very popular so I’ve only gone and implemented the idea that I was alluding to with horizontal scrolling!</p>\n<p class=\"b-post__image\"><img src=\"/images/2012/01/rt_05_01_12.png\" alt=\"Responsive Tables (2)\"></p>\n\n<p>See <a href=\"/2016/03/04/css-only-responsive-tables/\">Responsive Tables Demo (2)</a> — <strong>in a modern browser!</strong> Webkit browsers handle both tables perfectly. Firefox &amp; Opera handle the first version. The second version plays with/abuses the <a href=\"http://www.w3.org/TR/css3-flexbox/\">flexible box layout</a> and only works with a <code>-webkit-</code> prefix.</p>\n<p>I’m confident with more ingenuity I can get this idea working in IE9. Please note: this is far from perfected!</p>\n<p><em><em> <em>*Update 10th Jan:</em></em> as the comments below note this technique (as is here) won’t work on a lot of older mobile browsers. Scrolling functionality could be replicated with JavaScript (if the layout works). Feature detection would be needed to make this viable, falling back to a layout like <a href=\"http://css-tricks.com/responsive-data-tables/\">Chris Coyier’s</a>.</em></p>\n<p>Something to consider: once you go block, you can’t go back! Changing the display of a table and its rows &amp; cells to block level is a lot easier than re-implementing the <a href=\"http://www.w3.org/TR/CSS2/tables.html\">table model</a> with CSS. Important to note because it’s commonly advised to build responsive websites from small to large (think <a href=\"http://www.stuffandnonsense.co.uk/projects/320andup/\">320 and up</a>). Good advise, though not gospel. I’ve found with tables it may be better to have the larger traditional table version as default and use <code>max-width</code> media queries to scale down. Food for thought, anyway.</p>\n<p>I like this concept. Usability is up for debate. Is it intuitive enough? It keeps data side-by-side and doesn’t take up a lot of space. I’m going to keep experimenting — appreciate the feedback so far!</p>\n",
  "pageExcerpt": "\nNEW: CSS only Responsive Tables\nSee the link above for more recent developments.\n\n\nMy last article on responsive tables was very popular so I’ve only gone and implemented the idea that I was alluding to with horizontal scrolling!\n\n\nSee Responsive Tables Demo (2) — in a modern browser! Webkit browsers handle both tables perfectly. Firefox &amp; Opera handle […]",
  "pageTitle": "Responsive Tables (2) – David Bushell – Web Design (UK)"
}