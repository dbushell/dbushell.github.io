{
  "dateUnix": 1337674216000,
  "dateFormatted": "Tuesday 22 May 2012",
  "pageHeading": "JavaScript Bookmarklets",
  "pagePath": "/2012/05/22/javascript-bookmarklets/",
  "innerHTML": "<p>I love a good <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://en.wikipedia.org/wiki/Bookmarklet\">JavaScript bookmarklet</a>.</p>\n<p>They’re <a href=\"/2012/05/15/pageshift-removing-the-refresh/\">fun to play with</a> and a great way to hack around on a live website with new code <em>without</em> affecting anyone else’s experience. They can also become part of your service; think <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://www.readability.com/bookmarklets\">Readability’s ‘Read Now’</a> or <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://pinterest.com\">Pinterest’s ‘Pin it!’</a>.</p>\n<p>A bookmarklet begins with the following shell:</p>\n<pre><code class=\"language-javascript\">javascript<span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// code...</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Here we’re enclosing a <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://sarfraznawaz.wordpress.com/2012/01/26/javascript-self-invoking-functions/\">self-invoking function</a> within a basic <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://en.wikipedia.org/wiki/URI_scheme\">URI scheme</a> that all browsers understand. When a user clicks the bookmark the browser sees the <code>javascript:</code> prefix and executes the code on the current page.</p>\n<p>Remember that <strong>jQuery might not be available</strong>. Bookmarklets should be designed to run on any website (or as many as possible), so don’t use jQuery in the actual bookmarklet code. I’d suggest using this as an opportunity to learn actual JavaScript rather than relying on libraries and plugins. Either way, you’ll need to load in your own external stylesheets and scripts:</p>\n<pre><code class=\"language-javascript\"><span class=\"token keyword\">var</span> script <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscript<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'text/javascript'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscript<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'charset'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UTF-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscript<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://code.jquery.com/jquery-1.7.2.min.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>The <code>charset</code> attribute is important to avoid encoding issues. If you <em>are</em> loading jQuery, wrap it in this to avoid duplication:</p>\n<pre><code class=\"language-javascript\"><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>window<span class=\"token punctuation\">.</span>jQuery<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// load script...</span>\n<span class=\"token punctuation\">}</span></code></pre>\n<p>If you’re sending a query string to <code>script.js</code> with page information make sure to use <code>encodeURIComponent</code> like so:</p>\n<pre><code class=\"language-javascript\">script<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://example.com/script.js?r='</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">'&amp;title='</span> <span class=\"token operator\">+</span> <span class=\"token function\">encodeURIComponent</span><span class=\"token punctuation\">(</span>document<span class=\"token punctuation\">.</span>title<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>Another useful trick is to append a random number to the <code>script.js</code> URL ensuring — to some extent — that the browser does not load an older version from its cache.</p>\n<p>In the event that you need to preload injected scripts, use this pattern:</p>\n<pre><code class=\"language-javascript\">el<span class=\"token punctuation\">.</span>onload <span class=\"token operator\">=</span> el<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> rs <span class=\"token operator\">=</span> script<span class=\"token punctuation\">.</span>readyState<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>rs <span class=\"token operator\">||</span> rs <span class=\"token operator\">===</span> <span class=\"token string\">'loaded'</span> <span class=\"token operator\">||</span> rs <span class=\"token operator\">===</span> <span class=\"token string\">'complete'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        script<span class=\"token punctuation\">.</span>onload <span class=\"token operator\">=</span> script<span class=\"token punctuation\">.</span>onreadystatechange <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">// on load code...</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span></code></pre>\n<p>This situation may occur if you’ve written a script for normal usage that requires an <code>init()</code> function to be called when the document has loaded. You can then do <code>myNamespace.init()</code> on load instead of writing a duplicate script that executes immediately. Using both the <code>onload</code> and <code>onreadystatechange</code> events ensures legacy cross-browser compatibility.</p>\n<p>Injecting CSS stylesheets is done in a similar way.</p>\n<p>It’s best practice to keep your bookmarklet small. I’m pretty sure browsers don’t like users bookmarking 10,000 lines of code, but more importantly it has to be updated manually by each user. By loading external files we can make changes easily. However, once someone has installed the bookmarklet you need a way to inform them of major updates. If you don’t implement this from the start there is no going back without simply breaking their experience.</p>\n<p>Our final bookmarklet boilerplate:</p>\n<pre><code class=\"language-javascript\">javascript<span class=\"token operator\">:</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">{</span>\n\n<span class=\"token comment\">// avoid the bookmarklet activating more than once</span>\n<span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">.</span>MyNamespace<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">return</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\nwindow<span class=\"token punctuation\">.</span>MyNamespace <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span> <span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">var</span> version <span class=\"token operator\">=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span>\n    script  <span class=\"token operator\">=</span> document<span class=\"token punctuation\">.</span><span class=\"token function\">createElement</span><span class=\"token punctuation\">(</span><span class=\"token string\">'script'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nscript<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'type'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'text/javascript'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscript<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'charset'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'UTF-8'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nscript<span class=\"token punctuation\">.</span><span class=\"token function\">setAttribute</span><span class=\"token punctuation\">(</span><span class=\"token string\">'src'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'http://example.com/script.js?r='</span> <span class=\"token operator\">+</span> Math<span class=\"token punctuation\">.</span><span class=\"token function\">random</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\ndocument<span class=\"token punctuation\">.</span>documentElement<span class=\"token punctuation\">.</span><span class=\"token function\">appendChild</span><span class=\"token punctuation\">(</span>script<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nscript<span class=\"token punctuation\">.</span>onload <span class=\"token operator\">=</span> script<span class=\"token punctuation\">.</span><span class=\"token function-variable function\">onreadystatechange</span> <span class=\"token operator\">=</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">var</span> rs <span class=\"token operator\">=</span> script<span class=\"token punctuation\">.</span>readyState<span class=\"token punctuation\">;</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>rs <span class=\"token operator\">||</span> rs <span class=\"token operator\">===</span> <span class=\"token string\">'loaded'</span> <span class=\"token operator\">||</span> rs <span class=\"token operator\">===</span> <span class=\"token string\">'complete'</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n        script<span class=\"token punctuation\">.</span>onload <span class=\"token operator\">=</span> script<span class=\"token punctuation\">.</span>onreadystatechange <span class=\"token operator\">=</span> <span class=\"token keyword\">null</span><span class=\"token punctuation\">;</span>\n\n        <span class=\"token comment\">// initialise or warn if older version</span>\n        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>version <span class=\"token operator\">!==</span> window<span class=\"token punctuation\">.</span>MyNamespace<span class=\"token punctuation\">.</span>version<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n            <span class=\"token function\">alert</span><span class=\"token punctuation\">(</span><span class=\"token string\">'This bookmarklet is out of date!'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n            window<span class=\"token punctuation\">.</span>MyNamespace<span class=\"token punctuation\">.</span><span class=\"token function\">init</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>You could even change the alert message to <code>window.MyNamespace.bookmarkletUpdate();</code> for ultimate flexibility. Maybe throw up an “Update Bookmarklet” overlay?</p>\n<p>And that’s it! Now the whole Web is yours to mess with.</p>\n",
  "pageExcerpt": "I love a good JavaScript bookmarklet.\nThey’re fun to play with and a great way to hack around on a live website with new code without affecting anyone else’s experience. They can also become part of your service; think Readability’s ‘Read Now’ or Pinterest’s ‘Pin it!’.\nA bookmarklet begins with the following shell:\njavascript:(function(){\n    // code...\n}());\nHere we’re enclosing […]",
  "pageTitle": "JavaScript Bookmarklets – David Bushell – Web Design (UK)"
}