{
  "dateUnix": 1363112796000,
  "dateFormatted": "Tuesday 12 Mar 2013",
  "pageHeading": "Automation",
  "pagePath": "/2013/03/12/automation/",
  "innerHTML": "<p>I used to believe hand-crafting every line of code was a necessity. <a href=\"/2012/08/27/im-bored-with-code/\">I u-turned on that opinion</a> and adopted <strong>CSS preprocessors</strong> with much gusto last year.</p>\n<p>It wasn’t so much the syntactical learning curve that initially put me off — they’re familiar if you’ve done any kind of programming — it was the perceived “added complexity” they would bring. For what, one more barrier to entry? The value I’ve since found:</p>\n<ul>\n<li>Code maintainability with includes.</li>\n<li>Understandable media query breakpoints across modular patterns.</li>\n<li>Relief from the repetition of vendor prefixes and fallbacks.</li>\n</ul>\n<p>CSS preprocessors have become integral to my workflow. I don’t go overboard. It’s very important to refrain from doing things differently for the sake of it. Yet I now find it painful to work without them.</p>\n<h2 id=\"a-new-process\">A new process</h2>\n<p>I cringe when I think of the amount of PSDs I used to produce. When I first started working agency-side it was expected that the client would see a minimum of three design mock-ups to choose from. I did well whittling that process down to a single, evolving design.</p>\n<p>These days there are no final design mock-ups. No sign-off stage. Design and build happens at the same time. I do very little “designing in the browser” — writing code doesn’t exactly allow creativity to flow in that sense — but I get there fast.</p>\n<p>This change in methodology has highlighted many more bottlenecks in my design and front-end development. CSS preprocessors were just the tipping point. Today I’m using <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://gruntjs.com/\">Grunt</a> which performs the following tasks for me:</p>\n<ul>\n<li>CSS preprocessing with <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://sass-lang.com/\">Sass</a> (via <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://compass-style.org/\">Compass</a>)</li>\n<li>JavaScript linting and minifying with <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/mishoo/UglifyJS\">UglifyJS</a></li>\n<li>SVG optimisation/minifying with <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/svg/svgo\">SVGO</a></li>\n<li>SVG rasterisation *</li>\n</ul>\n<p class=\"p--small u-dim\"><em>* to create PNGs from SVGs I use a <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://phantomjs.org/\">PhantomJS</a> script (heavily based on <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"https://github.com/filamentgroup/grunticon\">Grunticon</a>)</em></p>\n<p>I’m even working on my own Node.js tasks to build HTML includes for faster prototyping. I really like <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://hammerformac.com/\">Hammer for Mac</a> but its all-or-nothing simplicity sits awkwardly with my additional requirements. <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://mixture.io/\">Mixture</a> is another tool I look forward to testing.</p>\n<h2 id=\"dependancy\">Dependancy</h2>\n<p>For projects I’m working on alone these tools have sped up my workflow massively but I worry I’m becoming too dependant.</p>\n<p><a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://scottkellum.com/blog/specializing-yourself-into-a-corner.html\">Scott Kellum</a> has an internal conflict I know all too well:</p>\n<blockquote>\n<p>I’m not saying these tools aren’t valuable because they absolutely are. They are just introducing fragmentation into our community and I am noticing how much of a part of it I have become. I want to share my code with <em>everyone</em> who writes CSS, not a subset of that group.</p>\n</blockquote>\n<p>Sharing and working with others; occasions where I’ll have to down tools and do things the old fashioned way? That may be painful, but when I look at how complex browsers are becoming the price of automation is one I’m happy to pay.</p>\n<p>And what of fragmentation? That is inevitable in my opinion. When I <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://coding.smashingmagazine.com/2013/01/15/off-canvas-navigation-for-responsive-website/\">wrote</a> and <a href=\"/2013/03/03/a-responsive-day-out/\">spoke</a> about responsive navigation recently I shared a lot of practical techniques and concepts. The final code; that was less important. Implementation is becoming too nuanced for copy &amp; paste examples. When it comes to sharing I’m starting to find more value in the automated process rather than the final output.</p>\n<p>Automation, for me, is here to stay.</p>\n",
  "pageExcerpt": "I used to believe hand-crafting every line of code was a necessity. I u-turned on that opinion and adopted CSS preprocessors with much gusto last year.\nIt wasn’t so much the syntactical learning curve that initially put me off — they’re familiar if you’ve done any kind of programming — it was the perceived “added complexity” they […]",
  "pageTitle": "Automation – David Bushell – Web Design (UK)"
}