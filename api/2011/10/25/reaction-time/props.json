{
  "dateUnix": 1319568205000,
  "dateFormatted": "Tuesday 25 Oct 2011",
  "pageHeading": "Reaction Time",
  "pagePath": "/2011/10/25/reaction-time/",
  "innerHTML": "<p>Last week I wrote about <a href=\"/2011/10/18/the-thoughtful-touches/\">device optimisation</a> which adds a much needed bit of pragmatism to the holy grail of timeless, device-agnostic website design.</p>\n<p>I touched on a technique that I’ll expand here because it can be used more generically. If you’re going for a responsive layout with interactive elements this makes a massive difference to UX.</p>\n<h2 id=\"relative--responsive\">Relative &amp; Responsive</h2>\n<p>Consider the hero of our theoretical home page design: a full width photo carousel. When the user clicks left or right, or swipes, a new image slides into view from one side.</p>\n<p>Let’s say we specify that a slide transition has a <strong>1 second</strong> duration. For a page <strong>1000px wide</strong> an image travels at 1px per millisecond, or more usefully, <strong>100px/ds</strong> (deciseconds). Assume this is not too fast, not too slow; a pleasant transition. Now consider the same responsive design viewed on an iPhone at <strong>320px wide</strong>. It still uses the same JavaScript to animate each transition for 1 second but at this size the speed is now <strong>32px/ds</strong>, i.e. rather more sluggish. Check out my very rough <a rel=\"noopener noreferrer\" target=\"_blank\" href=\"http://jsfiddle.net/dbushell/EXfkU/12/embedded/result/\">JS Fiddle example</a> to see this effect in action.</p>\n<p>Speed = distance / time. In responsive design the distances are not constant. We can adjust for this in JavaScript by using the width or height of the animated element to calculate a <em>relative duration</em>. In CSS3 we don’t have this ability (unless we apply it with JavaScript).</p>\n<h3 id=\"a-noticeable-effect\">A Noticeable Effect?</h3>\n<p>When we add interactivity we purposely slow things down with transitions. This is a good thing; the user has chance to see what’s going on. But move things too slowly and frustration will quickly rise. Move things automatically and the user may not even notice (auto-play/auto-rotate sucks).</p>\n<p>The perceivable different in my example above is only noticeable towards the larger extremes. If an elements width only varies between a couple hundred pixels it’s probably not worth worrying about.</p>\n<p>When I built the <a href=\"/2011/10/18/the-thoughtful-touches/\">aforementioned</a> photography-based website (still in production!) this relative effect was very noticeable. I wrote my JavaScript in standard desktop mode and after a quick round of iPhone testing it become very obvious just how annoyingly slow things were moving at a smaller scale. Relative duration calculations went a <em>long</em> way. It felt snappy, it made the thing usable!</p>\n<h3 id=\"one-more-thing\">One More Thing…</h3>\n<p>It’s also worth considering that on touch screens the user implies their desired reaction time.</p>\n<p>Think of a casual swipe verses an aggressive “get on with it!” swipe. The iPhone’s natural scroll takes this into account and is very responsive as a result. This is hugely valuable information we don’t get with a mouse click. Reacting to the user is the best way to improve their experience.</p>\n<p>Something to think about!</p>\n",
  "pageExcerpt": "Last week I wrote about device optimisation which adds a much needed bit of pragmatism to the holy grail of timeless, device-agnostic website design.\nI touched on a technique that I’ll expand here because it can be used more generically. If you’re going for a responsive layout with interactive elements this makes a massive difference to UX.\nRelative […]",
  "pageTitle": "Reaction Time – David Bushell – Web Design (UK)"
}