{
  "dateUnix": 1322174153000,
  "dateFormatted": "Thursday 24 Nov 2011",
  "pageHeading": "Window Resize in JS",
  "pagePath": "/2011/11/24/window-resize-in-javascript/",
  "innerHTML": "<p>I will write a full article on responsive website design &amp; JavaScript soon, but for now here’s a quick snippet! (With a little help from jQuery, naturally.)</p>\n<pre><code class=\"language-javascript\"><span class=\"token keyword\">var</span> resizeTimeout<span class=\"token punctuation\">,</span> win <span class=\"token operator\">=</span> <span class=\"token function\">$</span><span class=\"token punctuation\">(</span>window<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nwin<span class=\"token punctuation\">.</span><span class=\"token function\">bind</span><span class=\"token punctuation\">(</span><span class=\"token string\">'resize'</span><span class=\"token punctuation\">,</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n<span class=\"token punctuation\">{</span>\n    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>resizeTimeout<span class=\"token punctuation\">)</span> <span class=\"token function\">clearTimeout</span><span class=\"token punctuation\">(</span>resizeTimeout<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    resizeTimeout <span class=\"token operator\">=</span> <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>\n    <span class=\"token punctuation\">{</span>\n        <span class=\"token keyword\">var</span> width <span class=\"token operator\">=</span> win<span class=\"token punctuation\">.</span><span class=\"token function\">width</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token comment\">/* do responsive stuff... */</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span></code></pre>\n<p>The basic idea is that you don’t want to be hammering the window resize event because it gets fired repeatedly when a user manually resizes their browser. Instead you should use a short timeout to wait for resizing to end.</p>\n<p>You may ask, why am I using JavaScript at all, surely pure CSS media queries are better? For most circumstances they are, but when you’re applying interactivity to a website, that experience can differ greatly depending on the screen size. My latest build involves a lot of Google Maps work but only for larger screens (an alternate — and default before JS kicks in — content design is presented to suit smaller screens). Loading in the whole Google Maps JavaScript library ignorant of usage is a heavy burden on bandwidth.</p>\n<p>I’m using this technique to load JavaScript and other content like high-res images very late in the game. If the window never reaches the larger breakpoints no unused resources are ever wasted.</p>\n<p>More soon!</p>\n",
  "pageExcerpt": "I will write a full article on responsive website design &amp; JavaScript soon, but for now here’s a quick snippet! (With a little help from jQuery, naturally.)\nvar resizeTimeout, win = $(window);\nwin.bind('resize', function()\n{\n    if (resizeTimeout) clearTimeout(resizeTimeout);\n    resizeTimeout = setTimeout(function()\n    {\n        […]",
  "pageTitle": "Window Resize in JS – David Bushell – Web Design (UK)"
}